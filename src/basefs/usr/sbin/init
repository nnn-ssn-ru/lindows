#!/usr/bin/python3
import os
import subprocess as sp
import system
from datetime import datetime

class log:
	@staticmethod
	def print(text):
		data = f"[{datetime.now()}] {text}"
		print(data)
		with open("/var/log/pylinux/init.log", "r") as f:
			log = f.read()
		log += "\n"+data
		with open("/var/log/pylinux/init.log", "w") as f:
			f.write(log)
	@staticmethod
	def info(text):
		log.print(f"\033[0m[\033[32mINFO\033[0m]    \033[34m {text}.\033[0m")
	@staticmethod
	def ok(text):
		log.print(f"\033[0m[\033[32mOK\033[0m]      \033[32m {text}.\033[0m")
	@staticmethod
	def error(text):
		log.print(f"\033[0m[\033[31mERROR\033[0m]   \033[31m {text}!\033[0m")
	@staticmethod
	def debug(text):
		log.print(f"\033[0m[\033[36mDEBUG\033[0m]   \033[36m {text}.\033[0m")
	@staticmethod
	def warring(text):
		log.print(f"\033[0m[\033[33mWARRNING\033[0m]\033[33m {text}!\033[0m")
	@staticmethod
	def clear():
		print("\033[H\033[2J\033[3J", end="")

def mount(source, target, fs, options=""):
	log.info(f"Started mounting '{source}' to '{target}' by '{fs}' with options '{options}'")
	try:
		system.mount(source, target, fs, options)
	except Exception as err:
		log.error(f"Failed mounting '{source}' ({err})")
	log.info(f"Finished mounting '{source}'")

log.clear()
os.makedirs("/var", exist_ok=True)
os.makedirs("/log", exist_ok=True)
os.makedirs("/pylinux", exist_ok=True)
with open("/var/log/pylinux/init.log", "w") as f: f.write("")

log.info("Starting mounting filesystems")
mount("proc", "/proc", "proc", "rw")
mount("sysfs", "/sys", "sysfs", "rw")
mount("devtmpfs", "/dev", "devtmpfs", "rw")
mount("tmpfs", "/tmp", "tmpfs", "rw")

print("Welcome to PyLinux!\n")

ttys = []

for i in range(1, 5):
	process = sp.Popen(["/bin/openvt", "-f", "-c", str(i), "--", "/sbin/login"])
	ttys.append(process)

while True:
	pass
